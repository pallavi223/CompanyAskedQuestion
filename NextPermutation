Input: nums = [1,2,3]
Output: [1,3,2]

 class Solution {
public:
    void nextPermutation(vector<int>& nums) {
 next_permutation(nums.begin(),nums.end()); //predefined method
 }

###################################  OR  #####################################

class Solution {
public:
    void nextPermutation(vector<int>& nums) {
 
        
        if(nums.size()==1){
            return;
        }
        
        
        int idx1;
        for(int i=nums.size()-2;i>=0;i--){
             //traverse an array to find smallest ele 
            if(nums[i]<nums[i+1]){
                idx1=i;
                break;
            }
        }
          //if any array des order me hoga to koi value milegi ni to only reverse krdnge usko asc m chng krdnge
        if(idx1<0){
            reverse(nums.begin(),nums.end());
        }else{
            
            int idx2=0;
            for(int i=nums.size()-1;i>=0;i--){
                 //to find index2 (we need to find second largest ele of index1)
                if(nums[i]>nums[idx1]){
                    idx2=i;
                    break;
                }
            }
        
            swap(nums[idx1],nums[idx2]);
             //sort reaining ele 
            sort(nums.begin()+idx1+1,nums.end());
            
            
        }
        
        
        
    }
};
