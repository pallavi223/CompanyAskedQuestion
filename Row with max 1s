Input: 
N = 4 , M = 4
Arr[][] = {{0, 1, 1, 1},
           {0, 0, 1, 1},
           {1, 1, 1, 1},
           {0, 0, 0, 0}}
Output: 2
Explanation: Row 2 contains 4 1's (0-based
indexing).

Asked In
Amazon, Microsoft, Paytm

1. Brute Force Approach â€” Row wise traversal of the matrix
Algorithm Idea
A straightforward method is to do a row-wise traversal of the matrix, count the number of 1s in each row, and compare the count with max. 
Finally, return the index of the row with maximum 1s.


class Solution{
public:
	int rowWithMax1s(vector<vector<int> > arr, int n, int m) {
	    // code here
	    int maxi=0;
	    
	    int maxIndex=0;
	    for(int i=0;i<n;i++){
	        int count=0;
	        for(int j=0;j<m;j++){
	            if(arr[i][j] == 1)
	            count++;
	        }
	    
	    if(count > maxi){
	        maxi = count;
          maxIndex = i;
	        
	    }
	    
	}
	
	return maxIndex;
}
:: T(C) - O(nm)

2. Optimal Approach

